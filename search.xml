<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Nextcloud安装与https启用</title>
    <url>/2025/04/25/%E6%97%A5%E5%B8%B8%E6%80%BB%E7%BB%93/%E8%BF%90%E7%BB%B4/Nextcloud%E5%AE%89%E8%A3%85%E4%B8%8Ehttps%E5%90%AF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="Nextcloud安装与https启用"><a href="#Nextcloud安装与https启用" class="headerlink" title="Nextcloud安装与https启用"></a>Nextcloud安装与https启用</h1><blockquote>
<p>最近升级了家里的服务器，结合这阵在公司私有网盘知识库的构建落地，有了Nextcloud的具体实施经验，所以在自己本地的服务器小主机上也引入了该服务。本文也由此而来，为有类似需求的网友带来一些帮助。本文的重点会是https的启用，Nextcloud的安装与部署采用的是Docker模式，所以只要有相关环境，会相对简单。</p>
</blockquote>
<hr>
<p>本文默认已经安装了docker 与docker-compose环境，若未安装，则先安装docker 与docker compose</p>
<hr>
<h1 id="1、基础环境"><a href="#1、基础环境" class="headerlink" title="1、基础环境"></a>1、基础环境</h1><p>略</p>
<hr>
<h1 id="2、-docker-docker-compose启用服务"><a href="#2、-docker-docker-compose启用服务" class="headerlink" title="2、 docker&amp;docker-compose启用服务"></a>2、 docker&amp;docker-compose启用服务</h1><p><strong>docker-comopse.yml配置</strong></p>
<p>以下配置是加入了完整启用https的配置，初始化启动时，应该是可以正常启动后使用80端口访问的，但443的https端口对应的内容是无法访问的，因为还需要再配置一下，在<strong>3、https启用部份进行具体说明</strong></p>
<p>在使用下面的配置是，注意注释内容，将其进行自定义修改一下，nextcloud毕竟是选来作来私有网盘的，不私有化配置一下，安全性也不好。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name: nextcloud</span><br><span class="line">services:</span><br><span class="line">  db:</span><br><span class="line">    image: mariadb:10.5</span><br><span class="line">    container_name: nextcloud_db</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    volumes:</span><br><span class="line">      - db-data:/var/lib/mysql</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD:  your_password # 添加你的密码</span><br><span class="line">      MYSQL_PASSWORD: your_password # 添加你的密码</span><br><span class="line">      MYSQL_DATABASE: nextcloud</span><br><span class="line">      MYSQL_USER: nextcloud</span><br><span class="line">    networks:</span><br><span class="line">      - nextcloud_network</span><br><span class="line">    healthcheck:</span><br><span class="line">      test: [&quot;CMD&quot;, &quot;mysqladmin&quot;, &quot;ping&quot;, &quot;-h&quot;, &quot;localhost&quot;]</span><br><span class="line">      interval: 10s</span><br><span class="line">      retries: 5</span><br><span class="line">      start_period: 30s</span><br><span class="line">      timeout: 5s</span><br><span class="line"></span><br><span class="line">  app:</span><br><span class="line">    image: nextcloud</span><br><span class="line">    container_name: nextcloud_app</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;80:80&quot;     # 保留 HTTP 用于跳转</span><br><span class="line">      - &quot;443:443&quot;   # 新增 HTTPS 端口</span><br><span class="line">    volumes:</span><br><span class="line">      - ./nextcloud-data:/var/www/html  #这里的数据部份最好挂载到本地，方便备份之类的操作</span><br><span class="line">      - ./ssl:/etc/apache2/ssl # 这里需要进行ssl操作的配置文件挂载。</span><br><span class="line">      #- ./custom_apache.conf:/etc/apache2/sites-enabled/custom_apache.conf  # 配置挂载</span><br><span class="line">      - ./custom_apache.conf:/etc/apache2/sites-available/custom_apache.conf  # 配置挂载</span><br><span class="line">      - ./apache2.conf:/etc/apache2/apache2.conf # 这个镜像使用的是apache2来进行管理</span><br><span class="line">      # - ./apache-ssl.conf:/etc/apache2/sites-available/000-default-ssl.conf</span><br><span class="line">    environment:</span><br><span class="line">      - APACHE_ARGUMENTS=-D SSL  #这里的配置都比较重要，都要加上</span><br><span class="line">      - OVERWRITEPROTOCOL=https</span><br><span class="line">      - APACHE_SERVER_NAME=serverName  # 部分镜像支持此变量（网页8）</span><br><span class="line"></span><br><span class="line">    depends_on:</span><br><span class="line">      db:</span><br><span class="line">        condition: service_healthy</span><br><span class="line">    networks:</span><br><span class="line">      - nextcloud_network</span><br><span class="line">    healthcheck:</span><br><span class="line">      test: [&quot;CMD&quot;, &quot;curl&quot;, &quot;-f&quot;, &quot;https://localhost&quot;]</span><br><span class="line">      interval: 30s</span><br><span class="line">      timeout: 10s</span><br><span class="line">      retries: 3</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  nextcloud_network:</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  db-data:</span><br><span class="line">    driver: local</span><br><span class="line">    driver_opts:</span><br><span class="line">      type: bind</span><br><span class="line">      device: ./mysql</span><br><span class="line">      o: bind</span><br><span class="line">  nextcloud-data:</span><br><span class="line">    driver: local</span><br><span class="line">    driver_opts:</span><br><span class="line">      type: bind</span><br><span class="line">      device: ./next_data</span><br><span class="line">      o: bind</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="3、https启用部份进行具体说明"><a href="#3、https启用部份进行具体说明" class="headerlink" title="3、https启用部份进行具体说明"></a><strong>3、https启用部份进行具体说明</strong></h1><p>nextcloud的部署还是比较简单，按上面的配置基本上可以很轻松的将nextcloud服务启动起来，接下来开始我们的重头戏，https的启用。这也是我写这篇博客的意义所在，因为虽然网上有很多nextcloud和部署的文档，还有https的启用文档，但至少在我的部署过程中，或多或少是无法全部启用成功的，也就是某个博客可能解决了我一小步的问题，但全局下来是没有完整的帮助我直接将https成功启用。所以我想了下，结合自身结历，整理自己完整趟车https启用的全过程，以期对后面的朋友有所帮助。</p>
<hr>
<p>nextcloud对应的https的启用有几个细节要重点注意</p>
<h3 id="证书配置"><a href="#证书配置" class="headerlink" title="证书配置"></a>证书配置</h3><ol>
<li><p>ssl证书的配置，这个有多种方式，但要选择apache的ssl证书</p>
<ol>
<li>可以在阿里云上创建ssl证书，并下载下来使用，我这里暂时不再缀述，后面有时间再将如何配置选择ssl证书的操作完善下来</li>
<li>自定义生成证书，这个网上有较多教程，我在公司环境中是这样配置的，这样的好处是可以自动续约，我在这里加上几个站点的现成记录，不再缀述。<ol>
<li><a href="https://zhuanlan.zhihu.com/p/21286171">ssl证书申请</a></li>
</ol>
</li>
</ol>
<p>正常来说，最后你将获得</p>
<ol>
<li>*_chain.crt</li>
<li>*.key</li>
<li>*_public.crt</li>
</ol>
<p>三个文件，也有把chain文件进行合并的，这里不再缀述。</p>
<hr>
<p>将这三个文件迁移至ssl文件夹中</p>
<p><img src="https://kuiqwang.oss-cn-chengdu.aliyuncs.com/blog/image-20250426093129723.png" alt="image-20250426093129723"></p>
</li>
</ol>
<h3 id="config-php配置"><a href="#config-php配置" class="headerlink" title="config.php配置"></a>config.php配置</h3><p>正常启动后，.&#x2F;next_data路径下会挂载出相应的nextcloud目录文件</p>
<p><img src="https://kuiqwang.oss-cn-chengdu.aliyuncs.com/blog/image-20250426093731700.png" alt="image-20250426093731700"></p>
<p>我们进行config文件夹找到config.php，这是我们nextcloud的关键配置文件,可以进行可信域名等诸多配置。</p>
<hr>
<h4 id="可信域名配置"><a href="#可信域名配置" class="headerlink" title="可信域名配置"></a>可信域名配置</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;trusted_domains&#x27; =&gt;</span><br><span class="line">  array (</span><br><span class="line">	  #0 =&gt; &#x27;192.168.3.110&#x27;,</span><br><span class="line">	  0 =&gt; &#x27;your_https_domain&#x27;,#这里配置你的https 证书绑定的域名，不然你就算成功配置了https，进行页面也会提醒你的访问域名不可信</span><br><span class="line">	  1 =&gt; &#x27;192.168.3.110&#x27;,</span><br><span class="line">  ),</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong></p>
<ol>
<li>这里配置域名的时候不要加端口号，从我的实际使用经历来讲，这里加了端口号和https或https会致使反而无法正常使用。</li>
<li>注意逗号的配置，这里本质是个数组，所以你在元素之间的逗 号是不能省的，这里php的逗 号可以也在最后一个元素上也加上，不影响使用，但元素之间的不能少，一句话，可多不可少。</li>
</ol>
<hr>
<h3 id="apache2-conf-配置"><a href="#apache2-conf-配置" class="headerlink" title="apache2.conf  配置"></a>apache2.conf  配置</h3><p>在docker-compose.yml中，我们已经将我们的apache2.conf  给挂载出来了，这里直接在docker-compose文件夹地址处找到该文件进行配置即可</p>
<p>就是添加一行ServerName在文件最后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ServerName your_https_domain # 添加你的https domain在这里就行。</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># This is the main Apache server configuration file.  It contains the</span><br><span class="line"># configuration directives that give the server its instructions.</span><br><span class="line"># See http://httpd.apache.org/docs/2.4/ for detailed information about</span><br><span class="line"># the directives and /usr/share/doc/apache2/README.Debian about Debian specific</span><br><span class="line"># hints.</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># Summary of how the Apache 2 configuration works in Debian:</span><br><span class="line"># The Apache 2 web server configuration in Debian is quite different to</span><br><span class="line"># upstream&#x27;s suggested way to configure the web server. This is because Debian&#x27;s</span><br><span class="line"># default Apache2 installation attempts to make adding and removing modules,</span><br><span class="line"># virtual hosts, and extra configuration directives as flexible as possible, in</span><br><span class="line"># order to make automating the changes and administering the server as easy as</span><br><span class="line"># possible.</span><br><span class="line"></span><br><span class="line"># It is split into several files forming the configuration hierarchy outlined</span><br><span class="line"># below, all located in the /etc/apache2/ directory:</span><br><span class="line">#</span><br><span class="line">#	/etc/apache2/</span><br><span class="line">#	|-- apache2.conf</span><br><span class="line">#	|	`--  ports.conf</span><br><span class="line">#	|-- mods-enabled</span><br><span class="line">#	|	|-- *.load</span><br><span class="line">#	|	`-- *.conf</span><br><span class="line">#	|-- conf-enabled</span><br><span class="line">#	|	`-- *.conf</span><br><span class="line"># 	`-- sites-enabled</span><br><span class="line">#	 	`-- *.conf</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># * apache2.conf is the main configuration file (this file). It puts the pieces</span><br><span class="line">#   together by including all remaining configuration files when starting up the</span><br><span class="line">#   web server.</span><br><span class="line">#</span><br><span class="line"># * ports.conf is always included from the main configuration file. It is</span><br><span class="line">#   supposed to determine listening ports for incoming connections which can be</span><br><span class="line">#   customized anytime.</span><br><span class="line">#</span><br><span class="line"># * Configuration files in the mods-enabled/, conf-enabled/ and sites-enabled/</span><br><span class="line">#   directories contain particular configuration snippets which manage modules,</span><br><span class="line">#   global configuration fragments, or virtual host configurations,</span><br><span class="line">#   respectively.</span><br><span class="line">#</span><br><span class="line">#   They are activated by symlinking available configuration files from their</span><br><span class="line">#   respective *-available/ counterparts. These should be managed by using our</span><br><span class="line">#   helpers a2enmod/a2dismod, a2ensite/a2dissite and a2enconf/a2disconf. See</span><br><span class="line">#   their respective man pages for detailed information.</span><br><span class="line">#</span><br><span class="line"># * The binary is called apache2. Due to the use of environment variables, in</span><br><span class="line">#   the default configuration, apache2 needs to be started/stopped with</span><br><span class="line">#   /etc/init.d/apache2 or apache2ctl. Calling /usr/bin/apache2 directly will not</span><br><span class="line">#   work with the default configuration.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Global configuration</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># ServerRoot: The top of the directory tree under which the server&#x27;s</span><br><span class="line"># configuration, error, and log files are kept.</span><br><span class="line">#</span><br><span class="line"># NOTE!  If you intend to place this on an NFS (or otherwise network)</span><br><span class="line"># mounted filesystem then please read the Mutex documentation (available</span><br><span class="line"># at &lt;URL:http://httpd.apache.org/docs/2.4/mod/core.html#mutex&gt;);</span><br><span class="line"># you will save yourself a lot of trouble.</span><br><span class="line">#</span><br><span class="line"># Do NOT add a slash at the end of the directory path.</span><br><span class="line">#</span><br><span class="line">#ServerRoot &quot;/etc/apache2&quot;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># The accept serialization lock file MUST BE STORED ON A LOCAL DISK.</span><br><span class="line">#</span><br><span class="line">#Mutex file:$&#123;APACHE_LOCK_DIR&#125; default</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># The directory where shm and other runtime files will be stored.</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">DefaultRuntimeDir $&#123;APACHE_RUN_DIR&#125;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># PidFile: The file in which the server should record its process</span><br><span class="line"># identification number when it starts.</span><br><span class="line"># This needs to be set in /etc/apache2/envvars</span><br><span class="line">#</span><br><span class="line">PidFile $&#123;APACHE_PID_FILE&#125;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Timeout: The number of seconds before receives and sends time out.</span><br><span class="line">#</span><br><span class="line">Timeout 300</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># KeepAlive: Whether or not to allow persistent connections (more than</span><br><span class="line"># one request per connection). Set to &quot;Off&quot; to deactivate.</span><br><span class="line">#</span><br><span class="line">KeepAlive On</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># MaxKeepAliveRequests: The maximum number of requests to allow</span><br><span class="line"># during a persistent connection. Set to 0 to allow an unlimited amount.</span><br><span class="line"># We recommend you leave this number high, for maximum performance.</span><br><span class="line">#</span><br><span class="line">MaxKeepAliveRequests 100</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># KeepAliveTimeout: Number of seconds to wait for the next request from the</span><br><span class="line"># same client on the same connection.</span><br><span class="line">#</span><br><span class="line">KeepAliveTimeout 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># These need to be set in /etc/apache2/envvars</span><br><span class="line">User $&#123;APACHE_RUN_USER&#125;</span><br><span class="line">Group $&#123;APACHE_RUN_GROUP&#125;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># HostnameLookups: Log the names of clients or just their IP addresses</span><br><span class="line"># e.g., www.apache.org (on) or 204.62.129.132 (off).</span><br><span class="line"># The default is off because it&#x27;d be overall better for the net if people</span><br><span class="line"># had to knowingly turn this feature on, since enabling it means that</span><br><span class="line"># each client request will result in AT LEAST one lookup request to the</span><br><span class="line"># nameserver.</span><br><span class="line">#</span><br><span class="line">HostnameLookups Off</span><br><span class="line"></span><br><span class="line"># ErrorLog: The location of the error log file.</span><br><span class="line"># If you do not specify an ErrorLog directive within a &lt;VirtualHost&gt;</span><br><span class="line"># container, error messages relating to that virtual host will be</span><br><span class="line"># logged here.  If you *do* define an error logfile for a &lt;VirtualHost&gt;</span><br><span class="line"># container, that host&#x27;s errors will be logged there and not here.</span><br><span class="line">#</span><br><span class="line">ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># LogLevel: Control the severity of messages logged to the error_log.</span><br><span class="line"># Available values: trace8, ..., trace1, debug, info, notice, warn,</span><br><span class="line"># error, crit, alert, emerg.</span><br><span class="line"># It is also possible to configure the log level for particular modules, e.g.</span><br><span class="line"># &quot;LogLevel info ssl:warn&quot;</span><br><span class="line">#</span><br><span class="line">LogLevel warn</span><br><span class="line"></span><br><span class="line"># Include module configuration:</span><br><span class="line">IncludeOptional mods-enabled/*.load</span><br><span class="line">IncludeOptional mods-enabled/*.conf</span><br><span class="line"></span><br><span class="line"># Include list of ports to listen on</span><br><span class="line">Include ports.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Sets the default security model of the Apache2 HTTPD server. It does</span><br><span class="line"># not allow access to the root filesystem outside of /usr/share and /var/www.</span><br><span class="line"># The former is used by web applications packaged in Debian,</span><br><span class="line"># the latter may be used for local directories served by the web server. If</span><br><span class="line"># your system is serving content from a sub-directory in /srv you must allow</span><br><span class="line"># access here, or in any related virtual host.</span><br><span class="line">&lt;Directory /&gt;</span><br><span class="line">	Options FollowSymLinks</span><br><span class="line">	AllowOverride None</span><br><span class="line">	Require all denied</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">&lt;Directory /usr/share&gt;</span><br><span class="line">	AllowOverride None</span><br><span class="line">	Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">&lt;Directory /var/www/&gt;</span><br><span class="line">	Options Indexes FollowSymLinks</span><br><span class="line">	AllowOverride None</span><br><span class="line">	Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">#&lt;Directory /srv/&gt;</span><br><span class="line">#	Options Indexes FollowSymLinks</span><br><span class="line">#	AllowOverride None</span><br><span class="line">#	Require all granted</span><br><span class="line">#&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># AccessFileName: The name of the file to look for in each directory</span><br><span class="line"># for additional configuration directives.  See also the AllowOverride</span><br><span class="line"># directive.</span><br><span class="line">#</span><br><span class="line">AccessFileName .htaccess</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># The following lines prevent .htaccess and .htpasswd files from being</span><br><span class="line"># viewed by Web clients.</span><br><span class="line">#</span><br><span class="line">&lt;FilesMatch &quot;^\.ht&quot;&gt;</span><br><span class="line">	Require all denied</span><br><span class="line">&lt;/FilesMatch&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># The following directives define some format nicknames for use with</span><br><span class="line"># a CustomLog directive.</span><br><span class="line">#</span><br><span class="line"># These deviate from the Common Log Format definitions in that they use %O</span><br><span class="line"># (the actual bytes sent including headers) instead of %b (the size of the</span><br><span class="line"># requested file), because the latter makes it impossible to detect partial</span><br><span class="line"># requests.</span><br><span class="line">#</span><br><span class="line"># Note that the use of %&#123;X-Forwarded-For&#125;i instead of %h is not recommended.</span><br><span class="line"># Use mod_remoteip instead.</span><br><span class="line">#</span><br><span class="line">LogFormat &quot;%v:%p %h %l %u %t \&quot;%r\&quot; %&gt;s %O \&quot;%&#123;Referer&#125;i\&quot; \&quot;%&#123;User-Agent&#125;i\&quot;&quot; vhost_combined</span><br><span class="line">LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %O \&quot;%&#123;Referer&#125;i\&quot; \&quot;%&#123;User-Agent&#125;i\&quot;&quot; combined</span><br><span class="line">LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %O&quot; common</span><br><span class="line">LogFormat &quot;%&#123;Referer&#125;i -&gt; %U&quot; referer</span><br><span class="line">LogFormat &quot;%&#123;User-agent&#125;i&quot; agent</span><br><span class="line"></span><br><span class="line"># Include of directories ignores editors&#x27; and dpkg&#x27;s backup files,</span><br><span class="line"># see README.Debian for details.</span><br><span class="line"></span><br><span class="line"># Include generic snippets of statements</span><br><span class="line">IncludeOptional conf-enabled/*.conf</span><br><span class="line"></span><br><span class="line"># Include the virtual host configurations:</span><br><span class="line">IncludeOptional sites-enabled/*.conf</span><br><span class="line"></span><br><span class="line">ServerName  your_serverName  #即https配置的域名</span><br></pre></td></tr></table></figure>

<h3 id="修改custom-apache-conf"><a href="#修改custom-apache-conf" class="headerlink" title="修改custom_apache.conf"></a>修改custom_apache.conf</h3><p>这个是我们启用https的核心文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;IfModule mod_ssl.c&gt;</span><br><span class="line">    &lt;VirtualHost *:443&gt;</span><br><span class="line">        ServerName your_https_domain #注意这里要配置，不要加端口号</span><br><span class="line"></span><br><span class="line">        SSLEngine on</span><br><span class="line">        SSLCertificateFile      /etc/apache2/ssl/*_public.crt</span><br><span class="line">        SSLCertificateKeyFile   /etc/apache2/ssl/*.key</span><br><span class="line">        SSLCertificateChainFile /etc/apache2/ssl/*.crt</span><br><span class="line"></span><br><span class="line">        SSLProtocol TLSv1.2 TLSv1.3</span><br><span class="line">        SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256</span><br><span class="line">        SSLHonorCipherOrder on</span><br><span class="line">        SSLCompression off</span><br><span class="line"></span><br><span class="line">        DocumentRoot /var/www/html</span><br><span class="line">        ErrorLog $&#123;APACHE_LOG_DIR&#125;/ssl_error.log</span><br><span class="line">        CustomLog $&#123;APACHE_LOG_DIR&#125;/ssl_access.log combined</span><br><span class="line"></span><br><span class="line">        &lt;Directory /var/www/html&gt;</span><br><span class="line">            Options FollowSymLinks</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：这里的ssl文件名要修改成你的具体文件名</p>
<p><img src="https://kuiqwang.oss-cn-chengdu.aliyuncs.com/blog/image-20250426095243349.png" alt="image-20250426095243349"></p>
<hr>
<p>到此配置文件配置就完成了，你可以直接重启nextloud</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker compose down -v #先关闭</span><br><span class="line">docker compose up -d  #再启动</span><br></pre></td></tr></table></figure>

<hr>
<p>到这里你基础上就可以看到</p>
<p><img src="https://kuiqwang.oss-cn-chengdu.aliyuncs.com/blog/image-20250426095456851.png" alt="image-20250426095456851"></p>
<hr>
<p>但接下来还有几个坑要去踩，这几个坑趟过去了，才能算成功</p>
<h1 id="几个坑"><a href="#几个坑" class="headerlink" title="几个坑"></a>几个坑</h1><h3 id="坑一"><a href="#坑一" class="headerlink" title="坑一"></a>坑一</h3><p>docker外的443端口已经监听(就是如上图，443端口已经绑到这个容器上了，不是主机可能存在nginx 443 和80端口的意思，如果nginx启用容器也无法正常启动，端口会冲突)，但容器内的443端口是没有正常监听的。</p>
<h4 id="核心原因主要是-容器内ssl配置资源没有正常启用，即刚才的ssl-on这个配置并没有成功加载"><a href="#核心原因主要是-容器内ssl配置资源没有正常启用，即刚才的ssl-on这个配置并没有成功加载" class="headerlink" title="核心原因主要是 容器内ssl配置资源没有正常启用，即刚才的ssl on这个配置并没有成功加载"></a>核心原因主要是 容器内ssl配置资源没有正常启用，即刚才的ssl on这个配置并没有成功加载</h4><hr>
<p>要使这个配置能正常加载要做好以下几点</p>
<ol>
<li>.&#x2F;custom_apache.conf:&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;custom_apache.conf  # 配置挂载</li>
</ol>
<p>将配置文件挂载到&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F; 路径下，这样才能正常启用，而不是挂到enable路径下。</p>
<p>因为我们的docker-compose文件中已经将此路径挂载到了相应位置，但在启动时还是无法正常访问的话，这里就主要是补充坑的处理情况。这里就是容器内部去手动启用这个配置，进行如下操作。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -it nextcloud_app bash</span><br><span class="line"># 1. 启用 SSL 支持</span><br><span class="line">a2enmod ssl</span><br><span class="line"></span><br><span class="line"># 2. 禁用默认自签站点（可选，防止冲突）</span><br><span class="line">a2dissite default-ssl</span><br><span class="line"></span><br><span class="line"># 3. 启用您的站点（只需基名或基名加 .conf）</span><br><span class="line">a2ensite custom_apache</span><br><span class="line"># 或者</span><br><span class="line">a2ensite custom_apache.conf</span><br><span class="line"></span><br><span class="line"># 4. 验证配置无误</span><br><span class="line">apachectl configtest</span><br><span class="line"></span><br><span class="line"># 5. 重载 Apache（Debian/Ubuntu 推荐使用 service 命令）</span><br><span class="line">service apache2 reload</span><br></pre></td></tr></table></figure>

<p>要是执行到apachectl configtest 一直不报错，最后报的是 <strong>Syntax OK</strong> ，恭喜你没有遇到其它问题了，接下来直接重启</p>
<p>service apache2 reload</p>
<p>这是在容器内重启，会导致你从容器内被退出，但重启只要不报错，那这里的ssl on的功能就算加载成功了</p>
<h3 id="坑二"><a href="#坑二" class="headerlink" title="坑二"></a>坑二</h3><p>出现坑二的问题的朋友，一般说明网络这块相对会有些薄弱，一般坑二要处理好了，才能验证是否有坑一。</p>
<p>坑二就是国内是不能在非备案的情况下，直接访问443与80的。所以正常的操作方式是启用其它端口，而因为我们在这里docker服务上绑定的还是443，但你要在你的路由器&#x2F;防火墙上，进行外网的端口转发配置，我用的华为路由器。通过NAT的功能的配置成了9009 -&gt; 443.</p>
<p>而在具体的访问的时候，则要通过https_domain:9009进行访问，而之前的配置是不用变的，这里只是配置一个9009</p>
<hr>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>至此，通过上述操作，有较大可能是能成功启用https功能，但不得不说的是每个人的基本功不一样，我上文中可能省略了一些我觉得常识性的内容，对一些朋友来说可能不清楚，还是会导致一些问题出现，可以通过私信我进行交流。nextcloud不启用https有一些插件是无法正常使用的，所以建议朋友们花些心思配置一下，祝好!</p>
]]></content>
      <categories>
        <category>运维组件</category>
      </categories>
  </entry>
</search>
